---
# Coolify-optimized Docker Compose configuration
# Set environment variables in Coolify's UI (see .env.coolify.example)

services:
  php:
    build:
      context: .
      target: frankenphp_prod
    image: app-php
    restart: unless-stopped
    environment:
      # Server configuration
      SERVER_NAME: ${SERVER_NAME}, php:80
      APP_ENV: prod

      # Security secrets (REQUIRED - set in Coolify)
      APP_SECRET: ${APP_SECRET}

      # Database connection (REQUIRED - use Coolify's database service)
      DATABASE_URL: ${DATABASE_URL}

      # Mercure configuration (REQUIRED - set in Coolify)
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET}

    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 8080
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

volumes:
  caddy_data:
  caddy_config:
