# Coolify Environment Variables
# ============================
# Copy these variables to Coolify's Environment Variables section in your project settings
# Replace example values with your actual production values

# REQUIRED VARIABLES
# ------------------

# Your domain name (without https://)
# Example: tablesoccer.yourdomain.com or app.example.com
SERVER_NAME=your-domain.com

# Application secret key - MUST be a secure random string (min 32 characters)
# Generate with: openssl rand -hex 32
APP_SECRET=REPLACE_WITH_SECURE_RANDOM_STRING_32_CHARS_MIN

# Mercure JWT secret for real-time updates - MUST be a secure random string
# Generate with: openssl rand -hex 32
CADDY_MERCURE_JWT_SECRET=REPLACE_WITH_SECURE_RANDOM_STRING_32_CHARS_MIN

# Database connection URL
# Create a PostgreSQL database in Coolify, then copy its DATABASE_URL here
# Format: postgresql://user:password@host:port/dbname?serverVersion=16&charset=utf8
# Coolify provides this automatically when you link a database service
DATABASE_URL=postgresql://user:password@postgres-host:5432/dbname?serverVersion=16&charset=utf8



# OPTIONAL VARIABLES
# -----------------------------------

# These have sensible defaults in compose.coolify.yaml
# Only set these if you need to override the defaults

# PostgreSQL version (default: 16)
# POSTGRES_VERSION=16

# Ports (defaults: 80, 443) - Coolify handles port mapping
 HTTP_PORT=80
 HTTPS_PORT=443
 HTTP3_PORT=443


# DEPLOYMENT NOTES
# ----------------
# 1. Create a PostgreSQL database in Coolify:
#    - In Coolify, go to "Databases" > "New Database" > "PostgreSQL"
#    - After creation, copy the DATABASE_URL from the database settings
#
# 2. Generate secure random strings for APP_SECRET and CADDY_MERCURE_JWT_SECRET:
#    openssl rand -hex 32
#
# 3. Set SERVER_NAME to your actual domain (Coolify will handle DNS/SSL)
#
# 4. In Coolify, go to your project > Environment Variables and add:
#    - SERVER_NAME
#    - APP_SECRET
#    - CADDY_MERCURE_JWT_SECRET
#    - DATABASE_URL (from your Coolify database)
#
# 5. Deploy using: compose.coolify.yaml
